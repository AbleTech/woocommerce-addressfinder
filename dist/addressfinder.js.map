{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/mutation_manager.js","webpack:///./src/form_manager.js","webpack:///./src/page_manager.js","webpack:///./src/address_form_config/region_mappings.js","webpack:///./src/address_form_config/billing_address.js","webpack:///./src/address_form_config/shipping_address.js","webpack:///./src/address_form_config/block_shipping_address.js","webpack:///./src/address_form_config/block_billing_address.js","webpack:///./src/address_form_config/find_block_checkout_ids.js","webpack:///./src/config_manager.js","webpack:///./src/woocommerce_plugin.js"],"names":["MutationManager","widgetConfig","mutationEventHandler","ignoredClass","millisecondsToIgnoreMutations","maxMutationTimeoutCount","mutationTimeoutCount","monitorMutations","window","MutationObserver","observer","_mutationHandler","bind","observe","document","body","childList","subtree","addEventListener","_domNodeModifiedHandler","console","info","mutations","changedNodes","reduce","nodes","mutation","target","classList","contains","concat","addedNodes","removedNodes","anyStoreMutations","find","node","_setMutationTimeout","event","className","includes","relatedNode","_mutationTimeout","_monitorExcessiveMutations","clearTimeout","setTimeout","_log","message","data","undefined","debug","log","FormManager","formHelperConfig","formFieldChangeEventToDispatch","countryChangeEventToListenFor","widgets","countryCodes","_bindToForm","label","widgetCountryCode","disable","destroy","countryElement","removeEventListener","boundCountryChangedListener","nzWidget","AddressFinder","Widget","searchElement","nzKey","nzWidgetOptions","on","_nzAddressSelected","auWidget","auKey","auWidgetOptions","_auAddressSelected","intWidget","_intAddressSelected","_countryChanged","_setActiveCountry","defaultCountry","activeCountry","value","nz","countryValue","au","countryCode","Object","values","forEach","widget","enable","setCountry","elements","addressIsPresent","element","combined","filter","length","join","fullAddress","metaData","selected","NZSelectedAddress","address_line_2","suburb","_combineAddressElements","address_line_1_and_2","_setElementValue","address_line_1","city","postcode","regionMappings","translatedRegionValue","region","locality_name","stateMappings","translatedStateValue","state_territory","address","state","elementName","errorMessage","warn","previousValue","tracker","_valueTracker","setValue","_dispatchEvent","Event","createEvent","initEvent","dispatchEvent","PageManager","addressFormConfigurations","version","formHelpers","countryElementWasPresent","identifiedFormHelperConfig","reload","loadFormHelpers","_areAllElementsStillInTheDOM","_newFormsIdentified","formHelper","identifiedAddressFormConfigurations","_identifyAddressForms","_initialiseFormHelper","config","currentCountryCode","countryElementValue","getCountryValue","every","_identifyingElementsPresentAndVisible","_getCurrentCountryValue","_areAllElementsStillInTheDOMForCountryCode","filteredElements","entries","key","optionalElements","requiredElements","_ignoreOptionalNullElements","addressFormConfig","layoutSelectors","selector","querySelector","style","display","push","identifiedForms","searchIdentifier","HTMLInputElement","countryIdentifier","address1","address2","helper","state_field","three_letter_mapping","two_letter_mapping","Array","from","querySelectorAll","map","el","val","FindBlockCheckoutIds","shippingCountry","_getElementId","shippingState","billingCountry","billingState","configuration","parentId","parent","getElementById","inputs","getElementsByTagName","id","ConfigManager","shippingAddress","billingAddress","blockShippingAddress","blockBillingAddress","findElements","d","w","WooCommercePlugin","_initPlugin","addressfinderDebugMode","_initOnDOMLoaded","load","jsonObject","JSON","parse","e","AddressFinderConfig","alert","repetitions","readyState","parsedWidgetOptions","_safeParseJSONObject","widget_options","parsedNZWidgetOptions","nz_widget_options","parsedAUWidgetOptions","au_widget_options","key_nz","key_au","default_country","_setVersionNumbers","_woocommercePlugin","s","createElement","src","async","onload","appendChild"],"mappings":"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","file":"addressfinder.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class MutationManager {\n  constructor({widgetConfig, mutationEventHandler, ignoredClass}) {\n    this.widgetConfig = widgetConfig\n    this.mutationEventHandler = mutationEventHandler\n\n    // Mutation events emitted by elements with this class are ignored.\n    this.ignoredClass = ignoredClass\n\n    this.millisecondsToIgnoreMutations = 750\n\n    // The amount of times the page can mutate in a row without forcing AddressFinder to be reinitialised.\n    this.maxMutationTimeoutCount = 20\n    // The count of the times the page has mutated in a row\n    this.mutationTimeoutCount = 0\n\n    this.monitorMutations()\n  }\n\n  // Attaches an observer or eventListener for listening to mutations\n  monitorMutations(){\n    if (window.MutationObserver) {\n      // for modern browsers\n      var observer = new MutationObserver(this._mutationHandler.bind(this));\n      observer.observe(document.body, {childList: true, subtree: true});\n\n    } else if (window.addEventListener) {\n      // for IE 9 and 10\n      document.body.addEventListener('DOMNodeInserted', this._domNodeModifiedHandler.bind(this), false);\n      document.body.addEventListener('DOMNodeRemoved', this._domNodeModifiedHandler.bind(this), false);\n    } else {\n        if (window.console) {\n          console.info('AddressFinder Error - please use a more modern browser')\n        }\n    }\n  }\n\n  /**\n   * For modern browsers:\n   * Determines if a mutation was triggered by AddressFinder or the Ecommerce store.\n   */\n  _mutationHandler(mutations){\n    const changedNodes = mutations.reduce((nodes, mutation) => {\n      // ignore this mutation if the target is the AddressFinder UL element\n      if (mutation.target && mutation.target.classList && mutation.target.classList.contains(this.ignoredClass)) {\n        return nodes\n      }\n\n      return nodes.concat([...mutation.addedNodes]).concat([...mutation.removedNodes])\n    }, [])\n\n    const anyStoreMutations = changedNodes.find((node) => {\n      return !(node.classList && node.classList.contains(this.ignoredClass))\n    })\n\n    if (!anyStoreMutations) {\n      return // ignore AddressFinder changes\n    }\n\n    this._setMutationTimeout()\n  }\n\n  /**\n   * For IE9 and IE10:\n   * Determines if a mutation was triggered by AddressFinder or the Ecommerce store.\n   */\n  _domNodeModifiedHandler(event){\n    if ((event.target.className && event.target.className.includes(this.ignoredClass)) ||\n        (event.relatedNode && event.relatedNode.className && event.relatedNode.className.includes(this.ignoredClass))) {\n        return // ignore AddressFinder changes\n    }\n\n    this._setMutationTimeout()\n  }\n\n  _setMutationTimeout() {\n    if (this._mutationTimeout) {\n\n\n      this._monitorExcessiveMutations()\n\n      clearTimeout(this._mutationTimeout) // reset previous timeout\n    }\n\n    // ignore any further changes for the next 750 mS\n    this._mutationTimeout = setTimeout(function() {\n      // If we can successfully call our mutation handler, reset the count.\n      this.mutationTimeoutCount = 0\n      this.mutationEventHandler()\n    }.bind(this), this.millisecondsToIgnoreMutations)\n  }\n\n\n  /**\n   * If the store continously triggers mutations the mutationEventHandler will never be called. If it is reset 20 times in a row,\n   * the page is considered to be mutating excessively. In this case we initialise AddressFinder, and in debug mode we warn the user\n   * that excessive mutations may stop AddressFinder from working.\n   *\n   */\n  _monitorExcessiveMutations() {\n    this.mutationTimeoutCount += 1\n\n    if (this.mutationTimeoutCount === this.maxMutationTimeoutCount) {\n      this.mutationEventHandler()\n      this._log('Page is triggering a large amount of mutations, which may prevent AddressFinder from working, and will slow down your store.')\n    }\n  }\n\n  _log(message, data=undefined){\n    if (this.widgetConfig.debug && window.console) {\n      if (data != undefined) {\n        console.log(`${message}`, data)\n      }\n      else {\n        console.log(`${message}`)\n      }\n    }\n  }\n}\n","export default class FormManager {\n  constructor(widgetConfig, formHelperConfig, formFieldChangeEventToDispatch, countryChangeEventToListenFor){\n    this.widgetConfig = widgetConfig\n    // Contains references to the DOM elements that make up this form\n    this.formHelperConfig = formHelperConfig\n    // When an address is selected dispatch this event on all the updated form fields. This tells the store the fields have been changed.\n    this.formFieldChangeEventToDispatch = formFieldChangeEventToDispatch\n    // An event listener with this event type is attached to country element. When the country changes the active country for the widget is set.\n    this.countryChangeEventToListenFor = countryChangeEventToListenFor\n    this.widgets = {}\n    this.countryCodes = [\"au\", \"nz\"]\n\n    this._bindToForm()\n  }\n\n  // Shuts down this form_helper by disabling the widget and any callback handlers.\n  destroy(){\n    this._log(\"Destroying widget\", this.formHelperConfig.label)\n\n    for (var widgetCountryCode in this.widgets) {\n      this.widgets[widgetCountryCode].disable()\n      this.widgets[widgetCountryCode].destroy()\n    }\n\n    this.widgets = null\n\n    if(this.formHelperConfig.countryElement) {\n      this.formHelperConfig.countryElement.removeEventListener(this.countryChangeEventToListenFor, this.boundCountryChangedListener)\n    }\n  }\n\n  // Creates the widgets and attaches a listener to the country element, so we can determine which widget should be active.\n  _bindToForm(){\n    let nzWidget = new window.AddressFinder.Widget(this.formHelperConfig.searchElement, this.widgetConfig.nzKey, \"nz\", this.widgetConfig.nzWidgetOptions);\n    nzWidget.on(\"result:select\", this._nzAddressSelected.bind(this))\n    this.widgets[\"nz\"] = nzWidget\n\n    let auWidget = new window.AddressFinder.Widget(this.formHelperConfig.searchElement, this.widgetConfig.auKey, \"au\", this.widgetConfig.auWidgetOptions);\n    auWidget.on(\"result:select\", this._auAddressSelected.bind(this))\n    this.widgets[\"au\"] = auWidget\n\n    let intWidget = new window.AddressFinder.Widget(this.formHelperConfig.searchElement, this.widgetConfig.auKey, \"us\", {});\n    intWidget.on(\"result:select\", this._intAddressSelected.bind(this))\n    this.widgets[\"int\"] = intWidget\n\n    this.boundCountryChangedListener = this._countryChanged.bind(this) // save this so we can unbind in the destroy() method\n\n    if(this.formHelperConfig.countryElement) {\n      /**\n       * The countryChangeEventToListenFor is the event we want to listen for to call the _countryChanged handler and reset the\n       * active country used by the widget to determine which database to search. Typically this event will be 'change' but in the\n       * case of WooCommerce it is blur.\n       */\n      this.formHelperConfig.countryElement.addEventListener(this.countryChangeEventToListenFor, this.boundCountryChangedListener)\n      this.boundCountryChangedListener()\n    } else {\n      // Sometimes there is no countryElement (WooCommerce). Not calling the changeHandler means that the widget can remain enabled.\n      this._setActiveCountry(this.widgetConfig.defaultCountry)\n    }\n  }\n\n  // Matches the value of the countryElement with the countryValue for this configuration. If it finds a match this will become the active country.\n  _countryChanged(){\n    var activeCountry;\n    switch (this.formHelperConfig.countryElement.value) {\n      case this.formHelperConfig.nz.countryValue:\n        activeCountry = \"nz\"\n        break;\n      case this.formHelperConfig.au.countryValue:\n        activeCountry = \"au\"\n        break;\n      case \"\":\n      case null:\n        activeCountry = \"null\"\n        break;\n      default:\n        activeCountry = this.formHelperConfig.int.countryValue[this.formHelperConfig.countryElement.value] || \"null\";\n    }\n\n    this._setActiveCountry(activeCountry)\n  }\n\n  _setActiveCountry(countryCode){\n    this._log(\"Setting active country\", countryCode)\n\n    Object.values(this.widgets).forEach(widget => widget.disable())\n\n    if (countryCode == \"null\") { return }\n\n    if ([\"nz\", \"au\"].includes(countryCode)) {\n      this.widgets[countryCode].enable()\n    } else {\n      this.widgets[\"int\"].enable()\n      this.widgets[\"int\"].setCountry(countryCode)\n    }\n  }\n\n  _combineAddressElements(elements) {\n    /**\n     * If we have two valid address elements, connect the string with a comma in between, otherwise just use the first.\n     * For example:\n     * ['65 Beauchamp Street', 'Karori'] becomes '65 Beauchamp Street, Karori'\n     * ['34 Arapuni Road', \"\"] becomes '34 Arapuni Road'\n     */\n    const addressIsPresent = element => element != null && element != \"\"\n    const combined = elements.filter(addressIsPresent)\n    return combined.length > 1 ? combined.join(\", \") : combined[0]\n  }\n\n  // Handles populating the elements with the response from the api (New Zealand)\n  _nzAddressSelected(fullAddress, metaData){\n    let elements = this.formHelperConfig.nz.elements\n    let selected = new AddressFinder.NZSelectedAddress(fullAddress, metaData);\n\n    if (!elements.address_line_2 && !elements.suburb) {\n      // If we only have address_line_1, the address line 1, 2 and suburb values are populated in that field.\n      const combined = this._combineAddressElements([selected.address_line_1_and_2(), selected.suburb()])\n      this._setElementValue(elements.address_line_1, combined, \"address_line_1\")\n    } else if (!elements.address_line_2 && elements.suburb) {\n      // If we have address_line_1 and a suburb field, put address 1 and 2 into address line 1, and suburb into the suburb field.\n      this._setElementValue(elements.address_line_1, selected.address_line_1_and_2(), \"address_line_1\")\n      this._setElementValue(elements.suburb, selected.suburb(), \"suburb\")\n    } else if (!elements.suburb && elements.address_line_2) {\n      this._setElementValue(elements.address_line_1, selected.address_line_1_and_2(), \"address_line_1\")\n      this._setElementValue(elements.address_line_2, selected.suburb(), \"address_line_2\")\n    } else {\n      // If we have all 3 fields populate each one.\n      this._setElementValue(elements.address_line_1, selected.address_line_1(), \"address_line_1\")\n      this._setElementValue(elements.address_line_2, selected.address_line_2(), \"address_line_2\")\n      this._setElementValue(elements.suburb, selected.suburb(), \"suburb\")\n    }\n\n    this._setElementValue(elements.city, selected.city(), \"city\")\n    this._setElementValue(elements.postcode, selected.postcode(), \"postcode\")\n\n    if (this.formHelperConfig.nz.regionMappings) {\n      // matches the region returned by the api with the region values in the select field\n      const translatedRegionValue = this.formHelperConfig.nz.regionMappings[metaData.region]\n      this._setElementValue(elements.region, translatedRegionValue, \"region\")\n    }\n    else {\n      this._setElementValue(elements.region, metaData.region, \"region\")\n    }\n  }\n\n  // Handles populating the elements with the response from the api (Australia)\n  _auAddressSelected(fullAddress, metaData){\n    let elements = this.formHelperConfig.au.elements\n\n    if (!elements.address_line_2) {\n      // If we only have address_line_1, put both address 1 and 2 into this line\n      const combined = this._combineAddressElements([metaData.address_line_1, metaData.address_line_2])\n      this._setElementValue(elements.address_line_1, combined, \"address_line_1\")\n    } else {\n      this._setElementValue(elements.address_line_1, metaData.address_line_1, \"address_line_1\")\n      // metaData.address_line_2 could be undefined, in which case we replace it with an empty string\n      const address_line_2 = metaData.address_line_2 || \"\"\n      this._setElementValue(elements.address_line_2, address_line_2, \"address_line_2\")\n    }\n\n    this._setElementValue(elements.locality_name, metaData.locality_name, \"suburb\")\n    this._setElementValue(elements.postcode, metaData.postcode, \"postcode\")\n\n    if (this.formHelperConfig.au.stateMappings) {\n      // matches the state returned by the api with the region values in the select field\n      const translatedStateValue = this.formHelperConfig.au.stateMappings[metaData.state_territory]\n      this._setElementValue(elements.state_territory, translatedStateValue, \"state_territory\")\n    }\n    else {\n      this._setElementValue(elements.state_territory, metaData.state_territory, \"state_territory\")\n    }\n  }\n\n  _intAddressSelected(fullAddress, metaData){\n    let elements = this.formHelperConfig.au.elements\n\n    if (!elements.address_line_2) {\n      // If we only have address_line_1, put both address 1 and 2 into this line\n      const combined = this._combineAddressElements([metaData.address.address_line_1, metaData.address.address_line_2])\n      this._setElementValue(elements.address_line_1, combined, \"address_line_1\")\n    } else {\n      this._setElementValue(elements.address_line_1, metaData.address.address_line_1, \"address_line_1\")\n      // metaData.address_line_2 could be undefined, in which case we replace it with an empty string\n      const address_line_2 = metaData.address.address_line_2 || \"\"\n      this._setElementValue(elements.address_line_2, address_line_2, \"address_line_2\")\n    }\n\n    this._setElementValue(elements.locality_name, metaData.address.city, \"suburb\")\n    this._setElementValue(elements.postcode, metaData.address.postcode, \"postcode\")\n    this._setElementValue(elements.state_territory, metaData.address.state, \"state_territory\")\n  }\n\n  _setElementValue(element, value, elementName){\n    if (!element) {\n      var errorMessage = 'AddressFinder Error: '\n                         + 'Attempted to update value for element that could not be found.\\n'\n                         + '\\nElement: ' + elementName\n                         + '\\nValue: ' + value;\n\n      if (window.console) {\n        console.warn(errorMessage);\n      }\n\n      return\n    }\n\n    /**\n     * The value tracker is checked on value state update and the tracker value must be different to the new value for it to apply.\n     * We are handling this by setting the tracker value to the previous value and then setting the new value.\n     * Reference:\n     * https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/client/inputValueTracking.js#L115\n     *\n     * We need this to handle when the plugin is used on a React site as otherwise the React components will reset the form after population.\n     */\n    var previousValue = element.value;\n    element.value = value;\n    var tracker = element._valueTracker;\n    if (tracker) {\n      tracker.setValue(previousValue);\n    }\n\n    this._dispatchEvent(element)\n  }\n\n  /**\n   * This function dispatches an event when the form fields are set, so the store knows the fields have changed. This can affect form validation.\n   * Typically we would use a 'change' event here, but Shopify is listening for the 'input' event specifically, so we pass this.formFieldChangeEventToDispatch as a param.\n   * It is also important to set 'bubbles' to true, as the store may listen for the event on the document, rather than\n   * the input field itself. This allows the event to move up the tree, triggering the event on both the input element and the document.\n   */\n  _dispatchEvent(element) {\n    var event;\n    switch (typeof (Event)) {\n    case 'function':\n      event = new Event(this.formFieldChangeEventToDispatch, {\"bubbles\":true, \"cancelable\": false});\n      break;\n    default:\n      event = document.createEvent('Event');\n      event.initEvent(this.formFieldChangeEventToDispatch, true, false);\n    }\n    element.dispatchEvent(event);\n  }\n\n  _log(message, data=undefined){\n    if (this.widgetConfig.debug && window.console) {\n      if (data != undefined) {\n        console.log(`FormHelper for layout ${this.formHelperConfig.label}: ${message}`, data)\n      }\n      else {\n        console.log(`FormHelper for layout ${this.formHelperConfig.label}: ${message}`)\n      }\n    }\n  }\n}\n","import FormManager from \"./form_manager\"\n\nexport default class PageManager {\n  constructor({addressFormConfigurations, widgetConfig, formFieldChangeEventToDispatch, countryChangeEventToListenFor}) {\n\n    this.version = \"1.8.7\"\n\n    // Each formHelper is an instance of the FormManager class\n    this.formHelpers = []\n    // An object containing identifying information about an address form, such as the id values\n    this.countryElementWasPresent = false\n    // We want to keep a record of the county element ever being present, if it is detected and then disappears, we have to reload the widget\n    this.addressFormConfigurations = addressFormConfigurations\n    // Configuration provided by the user, such as keys and widget options\n    this.widgetConfig = widgetConfig\n    // When an address is selected dispatch this event on all the updated form fields. This tells the store the fields have been changed.\n    this.formFieldChangeEventToDispatch = formFieldChangeEventToDispatch\n    // An event listener with this event type is attached to country element. When the country changes the active country for the widget is set.\n    this.countryChangeEventToListenFor = countryChangeEventToListenFor\n\n    this.identifiedFormHelperConfig = []\n\n    this.reload = this.reload.bind(this)\n\n    this.loadFormHelpers()\n  }\n\n  // Takes the addressFormConfigurations (static and dynamic) provided by the ConfigManager and loads our formHelpers\n  reload(addressFormConfigurations) {\n    if (!this._areAllElementsStillInTheDOM() || this._newFormsIdentified(addressFormConfigurations)) {\n      this.identifiedFormHelperConfig = []\n      this.addressFormConfigurations = addressFormConfigurations\n      this.loadFormHelpers()\n    }\n  }\n\n  // We destroy and reset all our current helpers and configurations, then recreate them.\n  loadFormHelpers() {\n    this.formHelpers.forEach(formHelper => formHelper.destroy())\n    this.identifiedAddressFormConfigurations = []\n    this.formHelpers = []\n\n    this._identifyAddressForms()\n    this.identifiedAddressFormConfigurations.forEach(this._initialiseFormHelper.bind(this))\n  }\n\n  _getCurrentCountryValue(config) {\n    // If the user does not provide a country element, we set the current country value to the default\n    if(!config.countryElement) return this.widgetConfig.defaultCountry\n\n    let currentCountryCode = null\n    let countryCodes = ['nz', 'au', 'int']\n    countryCodes.forEach((countryCode) => {\n      let countryElementValue = config.countryElement.value\n      if (!countryElementValue && config.getCountryValue) {\n        countryElementValue = config.getCountryValue()\n      }\n\n      if (countryCode == 'int') {\n        if (config[countryCode].countryValue[countryElementValue]) {\n          currentCountryCode = config[countryCode].countryValue[countryElementValue]\n        }\n      } else {\n        if (countryElementValue === config[countryCode].countryValue) {\n          currentCountryCode = countryCode\n        }\n      }\n    })\n    return currentCountryCode\n  }\n\n  /**\n   * We only want to reload AddressFinder if a mutation has made a critical change to the DOM,\n   * for example if any of the elements have been removed. This function determines whether we have to reload.\n   * This improves performance for all our plugins, but it is critical for the Optimised One Page Checkout in BigCommerce,\n   * which triggers page mutations that would otherwise reload AddressFinder on every key press.\n   */\n  _areAllElementsStillInTheDOM(){\n    if (this.identifiedFormHelperConfig.length === 0) {\n      // if we have no config there are no relevant elements in the dom and we must reload.\n      return false\n    }\n\n    return this.identifiedFormHelperConfig.every((config) => {\n\n      if (!this._identifyingElementsPresentAndVisible(config)) {\n        /**\n         * if the layout selectors are missing, or hidden we must reload.\n         * Sometimes form fields are hidden with css rather than removed from the dom. This check handles this scenario so we can reinitalise.\n         */\n        return false\n      }\n\n      if (config.countryElement != null && !document.body.contains(config.countryElement) && this.countryElementWasPresent) {\n        /**\n         * if the country element is missing and was never present we must reload\n         * a null country element will give a false positive, so first we check that it is not null\n         */\n        return false\n      }\n\n      let currentCountryCode = this._getCurrentCountryValue(config)\n\n      // currentCountryCode will be null for non supported countries.\n      // return true to avoid continuously reloading the widget, which otherwise would be looking for elements associated with a null currentCountryCode.\n      if (currentCountryCode == null) { return true }\n\n      if (!this._areAllElementsStillInTheDOMForCountryCode(config, currentCountryCode)) {\n        // if the dom doesn't contain all the elements associated with the current country we must reload\n        return false\n      }\n\n      return true\n    })\n  }\n\n  _ignoreOptionalNullElements(config, countryCode) {\n    const filteredElements = {}\n\n    if (['au', 'nz'].includes(countryCode)) {\n      Object.entries(config[countryCode].elements).forEach(([key, element]) => {\n        // Some forms don't have the address_line_2 or suburb fields.\n        // We allow these fields to be missing without reloading the widget\n        if (!(config[countryCode].optionalElements.includes(key) && element === null)) {\n          filteredElements[key] = element\n        }\n      })\n    } else {\n      Object.entries(config['int'].elements).forEach(([key, element]) => {\n        // Some forms don't have the address_line_2 or suburb fields.\n        // We allow these fields to be missing without reloading the widget\n        if (!(config['int'].optionalElements[countryCode].includes(key) && element === null)) {\n          filteredElements[key] = element\n        }\n      })\n    }\n\n    return filteredElements\n  }\n\n  _areAllElementsStillInTheDOMForCountryCode(config, countryCode) {\n    if (!countryCode) { return false }\n\n    const requiredElements = this._ignoreOptionalNullElements(config, countryCode)\n\n    return Object.values(requiredElements).every((element) => {\n      return element !== null && document.body.contains(element)\n    })\n  }\n\n  _identifyingElementsPresentAndVisible(addressFormConfig) {\n    // layoutSelectors is an array of elements used to identify a form\n    return addressFormConfig.layoutSelectors.every((selector) => {\n      let element = document.querySelector(selector)\n      /**\n       * a selector must be present, and cannot be hidden.\n       * This allows us to only initialise AddressFinder for forms that are visible to the user.\n      */\n      return element !== null && element.style.display !== 'none'\n    })\n  }\n\n  // Checks if each of our form configs are present on the page\n  _identifyAddressForms(){\n    for (const addressFormConfig of this.addressFormConfigurations) {\n\n      if (this._identifyingElementsPresentAndVisible(addressFormConfig)) {\n        this.log(`Identified layout named: ${addressFormConfig.label}`)\n\n        this.identifiedAddressFormConfigurations.push(addressFormConfig)\n      }\n    }\n  }\n\n  // Checks if additional forms have been identified since last 'reload'.\n  _newFormsIdentified(addressFormConfigurations){\n    let identifiedForms = []\n\n    for (const addressFormConfig of addressFormConfigurations) {\n      if (this._identifyingElementsPresentAndVisible(addressFormConfig)) {\n        identifiedForms.push(addressFormConfig)\n      }\n    }\n\n    // returns true if additional forms have been identified.\n    // this will trigger a full reload of all the widgets for each form.\n    if (identifiedForms.length > this.identifiedAddressFormConfigurations.length) {\n      this.log(\"Identified addtional forms\")\n      return true\n    }\n\n    return false\n  }\n\n  // For each configuration, create a formHelperConfig. This maps our form configurations to the corresponding DOM elements.\n  _initialiseFormHelper(addressFormConfig){\n    let searchElement = document.querySelector(addressFormConfig.searchIdentifier)\n\n    if (searchElement && searchElement instanceof HTMLInputElement) {\n      let formHelperConfig = {\n        countryElement: document.querySelector(addressFormConfig.countryIdentifier),\n        searchElement: document.querySelector(addressFormConfig.searchIdentifier),\n        label: addressFormConfig.label,\n        layoutSelectors: addressFormConfig.layoutSelectors,\n        getCountryValue: addressFormConfig.getCountryValue,\n        nz: {\n          countryValue: addressFormConfig.nz.countryValue,\n          elements: {\n            address_line_1: document.querySelector(addressFormConfig.nz.elements.address1),\n            address_line_2: document.querySelector(addressFormConfig.nz.elements.address2),\n            suburb: document.querySelector(addressFormConfig.nz.elements.suburb),\n            city: document.querySelector(addressFormConfig.nz.elements.city),\n            region: document.querySelector(addressFormConfig.nz.elements.region),\n            postcode: document.querySelector(addressFormConfig.nz.elements.postcode)\n          },\n          regionMappings: addressFormConfig.nz.regionMappings,\n          optionalElements: ['address_line_2', 'suburb']\n        },\n        au: {\n          countryValue: addressFormConfig.au.countryValue,\n          elements: {\n            address_line_1: document.querySelector(addressFormConfig.au.elements.address1),\n            address_line_2: document.querySelector(addressFormConfig.au.elements.address2),\n            locality_name: document.querySelector(addressFormConfig.au.elements.suburb),\n            state_territory: document.querySelector(addressFormConfig.au.elements.state),\n            postcode: document.querySelector(addressFormConfig.au.elements.postcode)\n          },\n          stateMappings: addressFormConfig.au.stateMappings,\n          optionalElements: ['address_line_2']\n        },\n        int: {\n          countryValue: addressFormConfig.int.countryValue,\n          elements: {\n            address_line_1: document.querySelector(addressFormConfig.int.elements.address1),\n            address_line_2: document.querySelector(addressFormConfig.int.elements.address2),\n            locality_name: document.querySelector(addressFormConfig.int.elements.suburb),\n            state_territory: document.querySelector(addressFormConfig.int.elements.state),\n            postcode: document.querySelector(addressFormConfig.int.elements.postcode)\n          },\n          stateMappings: addressFormConfig.int.stateMappings,\n          optionalElements: addressFormConfig.int.optionalElements\n        }\n      }\n\n      this.identifiedFormHelperConfig.push(formHelperConfig)\n\n      // if the country element is present, we set countryElementWasPresent to true\n      if (formHelperConfig.countryElement != null && document.body.contains(formHelperConfig.countryElement)) {\n        this.countryElementWasPresent = true\n      }\n\n      let helper = new FormManager(this.widgetConfig, formHelperConfig, this.formFieldChangeEventToDispatch, this.countryChangeEventToListenFor)\n      this.formHelpers.push(helper)\n    }\n  }\n\n  log(message, data=undefined){\n    if (this.widgetConfig.debug && window.console) {\n      if (data != undefined) {\n        console.log(`${message}`, data)\n      }\n      else {\n        console.log(`${message}`)\n      }\n    }\n  }\n}\n","export default (state_field) => {\n  const element = document.querySelector(state_field)\n\n  const three_letter_mapping = {\n    'Auckland Region': 'AUK',\n    'Bay of Plenty Region': 'BOP',\n    'Canterbury Region': 'CAN',\n    'Gisborne Region': 'GIS',\n    'Hawke\\'s Bay Region': 'HKB',\n    'Manawatu-Wanganui Region': 'MWT',\n    'Marlborough Region': 'MBH',\n    'Nelson Region': 'NSN',\n    'Northland Region': 'NTL',\n    'Otago Region': 'OTA',\n    'Southland Region': 'STL',\n    'Taranaki Region': 'TKI',\n    'Tasman Region': 'TAS',\n    'Waikato Region': 'WKO',\n    'Wellington Region': 'WGN',\n    'West Coast Region': 'WTC',\n    'No Region (Chatham Islands)': null\n  };\n\n  const two_letter_mapping = {\n    'Auckland Region': 'AK',\n    'Bay of Plenty Region': 'BP',\n    'Canterbury Region': 'CT',\n    'Gisborne Region': 'GI',\n    'Hawke\\'s Bay Region': 'HB',\n    'Manawatu-Wanganui Region': 'MW',\n    'Marlborough Region': 'MB',\n    'Nelson Region': 'NS',\n    'Northland Region': 'NL',\n    'Otago Region': 'OT',\n    'Southland Region': 'SL',\n    'Taranaki Region': 'TK',\n    'Tasman Region': 'TM',\n    'Waikato Region': 'WA',\n    'Wellington Region': 'WE',\n    'West Coast Region': 'WC',\n    'No Region (Chatham Islands)': null\n  };\n\n  if (element && Array.from(element.querySelectorAll(\"option\")).map((el) => el.value).filter((val) => val.length > 0)[0]?.length == 2) {\n    return two_letter_mapping;\n  }\n\n  return three_letter_mapping;\n}\n","import regionMappings from './region_mappings'\n\nexport default {\n  label: \"Billing Checkout\",\n  layoutSelectors: [\"#billing_address_1\"],\n  countryIdentifier: '#billing_country',\n  searchIdentifier: '#billing_address_1',\n  nz: {\n    countryValue: \"NZ\",\n    elements: {\n      address1: '#billing_address_1',\n      address2: null,\n      suburb: '#billing_address_2',\n      city: '#billing_city',\n      region: '#billing_state',\n      postcode: '#billing_postcode',\n    },\n    regionMappings: regionMappings('#billing_state')\n  },\n  au: {\n    countryValue: \"AU\",\n    elements: {\n      address1: '#billing_address_1',\n      address2: '#billing_address_2',\n      suburb: '#billing_city',\n      state: '#billing_state',\n      postcode: '#billing_postcode',\n    },\n    stateMappings: null\n  },\n  int: {\n    countryValue: {'BE': 'be', 'CA': 'ca', 'CZ': 'cz', 'DE': 'de', 'FR': 'fr', 'DK': 'dk', 'IE': 'ie', 'NL': 'nl', 'PT': 'pt', 'SG': 'sg', 'ES': 'es', 'SE': 'se', 'GB': 'gb', 'US': 'us'},\n    elements: {\n      address1: '#billing_address_1',\n      address2: '#billing_address_2',\n      suburb: '#billing_city',\n      state: '#billing_state',\n      postcode: '#billing_postcode',\n    },\n    stateMappings: null,\n    optionalElements: {'be': ['address_line_2', 'state_territory'], 'ca': ['address_line_2'], 'cz': ['address_line_2'], 'de': ['address_line_2', 'state_territory'], 'fr': ['address_line_2'], 'dk': ['address_line_2'], 'ie': ['address_line_2'], 'nl': ['address_line_2', 'state_territory'], 'pt': ['address_line_2', 'state_territory'], 'sg': ['address_line_2', 'state_territory'], 'es': ['address_line_2'], 'se': ['address_line_2'], 'gb': ['address_line_2'], 'us': ['address_line_2']}\n  }\n}\n","import regionMappings from './region_mappings'\n\nexport default {\n  label: \"Shipping Checkout\",\n  layoutSelectors: [\"#shipping_address_1\"],\n  countryIdentifier: '#shipping_country',\n  searchIdentifier: '#shipping_address_1',\n  nz: {\n    countryValue: \"NZ\",\n    elements: {\n      address1: '#shipping_address_1',\n      address2: null,\n      suburb: '#shipping_address_2',\n      city: '#shipping_city',\n      region: '#shipping_state',\n      postcode: '#shipping_postcode',\n    },\n    regionMappings: regionMappings('#shipping_state')\n  },\n  au: {\n    countryValue: \"AU\",\n    elements: {\n      address1: '#shipping_address_1',\n      address2: '#shipping_address_2',\n      suburb: '#shipping_city',\n      state: '#shipping_state',\n      postcode: '#shipping_postcode',\n    },\n    stateMappings: null\n  },\n  int: {\n    countryValue: {'BE': 'be', 'CA': 'ca', 'CZ': 'cz', 'DE': 'de', 'FR': 'fr', 'DK': 'dk', 'IE': 'ie', 'NL': 'nl', 'PT': 'pt', 'SG': 'sg', 'ES': 'es', 'SE': 'se', 'GB': 'gb', 'US': 'us'},\n    elements: {\n      address1: '#shipping_address_1',\n      address2: '#shipping_address_2',\n      suburb: '#shipping_city',\n      state: '#shipping_state',\n      postcode: '#shipping_postcode',\n    },\n    stateMappings: null,\n    optionalElements: {'be': ['address_line_2', 'state_territory'], 'ca': ['address_line_2'], 'cz': ['address_line_2'], 'de': ['address_line_2', 'state_territory'], 'fr': ['address_line_2'], 'dk': ['address_line_2'], 'ie': ['address_line_2'], 'nl': ['address_line_2', 'state_territory'], 'pt': ['address_line_2', 'state_territory'], 'sg': ['address_line_2', 'state_territory'], 'es': ['address_line_2'], 'se': ['address_line_2', 'state_territory'], 'gb': ['address_line_2'], 'us': ['address_line_2']}\n  }\n}\n","import regionMappings from './region_mappings'\n\nexport default {\n  label: \"Block Shipping Checkout\",\n  layoutSelectors: [\"#shipping-address_1\"],\n  countryIdentifier: '#components-form-token-input-0',\n  searchIdentifier: '#shipping-address_1',\n  nz: {\n    countryValue: \"New Zealand\",\n    elements: {\n      address1: '#shipping-address_1',\n      address2: null,\n      suburb: '#shipping-address_2',\n      city: '#shipping-city',\n      region: '#components-form-token-input-1',\n      postcode: '#shipping-postcode',\n    },\n    regionMappings: regionMappings('#components-form-token-input-1')\n  },\n  au: {\n    countryValue: \"Australia\",\n    elements: {\n      address1: '#shipping-address_1',\n      address2: '#shipping-address_2',\n      suburb: '#shipping-city',\n      state: \"#components-form-token-input-1\",\n      postcode: '#shipping-postcode',\n    },\n    stateMappings: null\n  },\n  int: {\n    countryValue: {'Belgium': 'be', 'Canada': 'ca', 'Czechia': 'cz', 'Denmark': 'de', 'France': 'fr', 'Germany': 'dk', 'Ireland': 'ie', 'Netherlands': 'nl', 'Portugal': 'pt', 'Singapore': 'sg', 'Spain': 'es', 'Sweden': 'se', 'United Kingdom (UK)': 'gb', 'United States (US)': 'us'},\n    elements: {\n      address1: '#shipping-address_1',\n      address2: '#shipping-address_2',\n      suburb: '#shipping-city',\n      state: \"#components-form-token-input-1\",\n      postcode: '#shipping-postcode',\n    },\n    stateMappings: null,\n    // add link to addressfinder tools\n    optionalElements: {'be': ['address_line_2', 'state_territory'], 'ca': ['address_line_2'], 'cz': ['address_line_2'], 'de': ['address_line_2', 'state_territory'], 'fr': ['address_line_2'], 'dk': ['address_line_2'], 'ie': ['address_line_2'], 'nl': ['address_line_2', 'state_territory'], 'pt': ['address_line_2', 'state_territory'], 'sg': ['address_line_2', 'state_territory'], 'es': ['address_line_2'], 'se': ['address_line_2', 'state_territory'], 'gb': ['address_line_2'], 'us': ['address_line_2']}\n  },\n}\n","import regionMappings from './region_mappings'\n\nexport default {\n  label: \"Block Billing Checkout\",\n  layoutSelectors: [\"#billing-address_1\"],\n  countryIdentifier: '#components-form-token-input-2',\n  searchIdentifier: '#billing-address_1',\n  nz: {\n    countryValue: \"New Zealand\",\n    elements: {\n      address1: '#billing-address_1',\n      address2: null,\n      suburb: '#billing-address_2',\n      city: '#billing-city',\n      region: '#components-form-token-input-3',\n      postcode: '#billing-postcode',\n    },\n    regionMappings: regionMappings('#components-form-token-input-3')\n  },\n  au: {\n    countryValue: \"Australia\",\n    elements: {\n      address1: '#billing-address_1',\n      address2: '#billing-address_2',\n      suburb: '#billing-city',\n      state: '#components-form-token-input-3',\n      postcode: '#billing-postcode',\n    },\n    stateMappings: null\n  },\n  int: {\n    countryValue: {'Belgium': 'be', 'Canada': 'ca', 'Czechia': 'cz', 'Denmark': 'de', 'France': 'fr', 'Germany': 'dk', 'Ireland': 'ie', 'Netherlands': 'nl', 'Portugal': 'pt', 'Singapore': 'sg', 'Spain': 'es', 'Sweden': 'se', 'United Kingdom (UK)': 'gb', 'United States (US)': 'us'},\n    elements: {\n      address1: '#billing-address_1',\n      address2: '#billing-address_2',\n      suburb: '#billing-city',\n      state: '#components-form-token-input-3',\n      postcode: '#billing-postcode',\n    },\n    stateMappings: null,\n    // add link to addressfinder tools\n    optionalElements: {'be': ['address_line_2', 'state_territory'], 'ca': ['address_line_2'], 'cz': ['address_line_2'], 'de': ['address_line_2', 'state_territory'], 'fr': ['address_line_2'], 'dk': ['address_line_2'], 'ie': ['address_line_2'], 'nl': ['address_line_2', 'state_territory'], 'pt': ['address_line_2', 'state_territory'], 'sg': ['address_line_2', 'state_territory'], 'es': ['address_line_2'], 'se': ['address_line_2', 'state_territory'], 'gb': ['address_line_2'], 'us': ['address_line_2']}\n  }\n}\n","export default class FindBlockCheckoutIds {\n\n  findElements(addressFormConfigurations) {\n    let shippingCountry = this._getElementId('shipping-country')\n    let shippingState = this._getElementId('shipping-state') || \"#shipping-state\"\n    let billingCountry = this._getElementId('billing-country')\n    let billingState = this._getElementId('billing-state') || \"#billing-state\"\n\n    // Set the shipping and billing ids for the elements which are known to change on the block checkout.\n    addressFormConfigurations.forEach((configuration) => {\n      if (configuration.label == \"Block Shipping Checkout\") {\n        configuration.countryIdentifier = shippingCountry\n        configuration.nz.elements.region = shippingState\n        configuration.au.elements.state = shippingState\n        configuration.int.elements.state = shippingState\n      } else if (configuration.label == \"Block Billing Checkout\") {\n        configuration.countryIdentifier = billingCountry\n        configuration.nz.elements.region = billingState\n        configuration.au.elements.state = billingState\n        configuration.int.elements.state = billingState\n      }\n    });\n  }\n\n  _getElementId(parentId){\n    let parent = document.getElementById(parentId)\n\n    if (parent){\n      let inputs = parent.getElementsByTagName('input')\n\n      if (inputs.length == 1) {\n        return `#${inputs[0].id}`\n      }\n    }\n\n    return null\n  }\n}\n","import billingAddress from './address_form_config/billing_address'\nimport shippingAddress from './address_form_config/shipping_address'\nimport blockShippingAddress from './address_form_config/block_shipping_address'\nimport blockBillingAddress from './address_form_config/block_billing_address'\nimport FindBlockCheckoutIds from './address_form_config/find_block_checkout_ids'\n\nexport default class ConfigManager {\n\n  constructor(){\n    this.FindBlockCheckoutIds = new FindBlockCheckoutIds()\n  }\n\n  load() {\n    // This function is called when the page mutates and returns our form configurations\n    const addressFormConfigurations = [\n      shippingAddress,\n      billingAddress,\n      blockShippingAddress,\n      blockBillingAddress\n    ]\n\n    // The block checkout input fields have different id's depending on:\n    // - country selected\n    // - on form create/destroy\n    this.FindBlockCheckoutIds.findElements(addressFormConfigurations)\n\n    return addressFormConfigurations\n  }\n}\n","import MutationManager from './mutation_manager'\nimport PageManager from './page_manager'\nimport ConfigManager from './config_manager'\n\n(function (d, w) {\n  class WooCommercePlugin {\n    constructor() {\n\n      this.version = \"1.6.3\"\n\n      // Manages the mapping of the form configurations to the DOM.\n      this.PageManager = null\n\n      // Manages the form configurations, and creates any dynamic forms\n      this.ConfigManager = null\n\n      this._initPlugin = this._initPlugin.bind(this)\n\n      this.addressfinderDebugMode = this.addressfinderDebugMode.bind(this)\n      w.addressfinderDebugMode = this.addressfinderDebugMode\n\n      this._initOnDOMLoaded()\n    }\n\n    mutationEventHandler() {\n      // When the form mutates, reload our form configurations, and reload the form helpers in the page manager.\n      let addressFormConfigurations = this.ConfigManager.load()\n      if (this.PageManager) {\n        this.PageManager.reload(addressFormConfigurations)\n      }\n    }\n\n    _safeParseJSONObject(jsonObject) {\n      if (jsonObject == undefined) {\n        return null;\n      }\n\n      try {\n        jsonObject = JSON.parse(jsonObject);\n      } catch (e) {\n        if (w.AddressFinderConfig.debug) {\n          alert('Invalid widget option: ' + jsonObject);\n        }\n\n        return null;\n      }\n\n      return jsonObject;\n    }\n\n    _initOnDOMLoaded(event, repetitions) {\n      // In WooCommerce/Wordpress a country change event is fired during the DOM loading process.\n      // If AddressFinder is added before this event it will clear the user's existing address details from the address fields.\n      // This function makes sure AddressFinder is initalised after this event.\n\n      repetitions = repetitions || 10\n\n      if (d.readyState == \"complete\" && typeof w.AddressFinder != 'undefined') {\n        setTimeout(() => {\n          console.log('ready state')\n          this._initPlugin()\n        }, 1000)\n        return\n      }\n\n      if (repetitions == 0) {\n        // if 5 seconds have passed and the DOM still isn't ready, initalise AddressFinder\n        console.log('repetition zero')\n        this._initPlugin()\n        return\n      }\n\n      setTimeout(() => {\n        // if less than 5 seconds have passed and the DOM isn't ready, recall the function to check again\n        this._initOnDOMLoaded('ignoredEvent', repetitions - 1)\n      }, 1000)\n    }\n\n    _initPlugin() {\n      let parsedWidgetOptions = this._safeParseJSONObject(w.AddressFinderConfig.widget_options);\n      let parsedNZWidgetOptions = this._safeParseJSONObject(w.AddressFinderConfig.nz_widget_options);\n      let parsedAUWidgetOptions = this._safeParseJSONObject(w.AddressFinderConfig.au_widget_options);\n\n      const widgetConfig = {\n        nzKey: w.AddressFinderConfig.key_nz || w.AddressFinderConfig.key || w.AddressFinderConfig.key_au,\n        auKey: w.AddressFinderConfig.key_au || w.AddressFinderConfig.key || w.AddressFinderConfig.key_nz,\n        nzWidgetOptions: parsedNZWidgetOptions || parsedWidgetOptions || {},\n        auWidgetOptions: parsedAUWidgetOptions || parsedWidgetOptions || {},\n        defaultCountry: w.AddressFinderConfig.default_country || 'nz',\n        debug: w.AddressFinderConfig.debug || false\n      }\n\n      this.ConfigManager = new ConfigManager()\n\n      // Watches for any mutations to the DOM, so we can reload our configurations when something changes.\n      new MutationManager({\n        widgetConfig: widgetConfig,\n        mutationEventHandler: this.mutationEventHandler.bind(this),\n        ignoredClass: \"af_list\"\n      })\n\n      this.PageManager = new PageManager({\n        addressFormConfigurations: this.ConfigManager.load(),\n        widgetConfig,\n        // When an address is selected dispatch this event on all the updated form fields. This tells the store the fields have been changed.\n        formFieldChangeEventToDispatch: 'change',\n        // An event listener with this event type is attached to country element. When the country changes the active country for the widget is set.\n        countryChangeEventToListenFor: 'blur'\n      })\n\n      this._setVersionNumbers()\n\n      w.AddressFinder._woocommercePlugin = this.PageManager\n    }\n\n    _setVersionNumbers() {\n      // rename webpage tools version from 'version' to 'webpageToolsVersion'\n      this.PageManager['webpageToolsVersion'] = this.PageManager.version\n      this.PageManager.version = this.version\n    }\n\n    /*\n    * When addressfinderDebugMode() is typed into the Javascript console the plugin will be reinitialised with debug set to true.\n    * This allows us to debug more easily on customer sites.\n    */\n    addressfinderDebugMode() {\n      w.AddressFinderConfig.debug = true\n      this._initPlugin()\n    }\n  }\n\n  var s = d.createElement('script')\n  s.src = 'https://api.addressfinder.io/assets/v3/widget.js'\n  s.async = 1;\n  s.onload = function () { new WooCommercePlugin }\n  d.body.appendChild(s)\n\n})(document, window)\n"],"sourceRoot":""}